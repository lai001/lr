[package]
name = "rs_editor"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["editor", "renderdoc"]
renderdoc = ["rs_render/renderdoc", "rs_engine/renderdoc"]
editor = [
    "rs_shader_compiler_core/editor",
    "rs_render/editor",
    "rs_core_minimal/editor",
    "rs_engine/editor",
    "rs_model_loader/editor",
]
standalone = [
    "rs_shader_compiler_core/standalone",
    "rs_render/standalone",
    "rs_core_minimal/standalone",
    "rs_engine/standalone",
    "rs_model_loader/standalone",
]
profiler = [
    "tracy-client/enable",
    "rs_render/profiler",
    "rs_engine/profiler",
    "rs_metis/profiler",
]
plugin_shared_crate = ["rs_engine/plugin_shared_crate"]
plugin_dotnet = ["dep:rs_dotnet", "dep:rs_dotnet_host"]
plugin_v8 = [
    "dep:rs_v8_host",
    "dep:rs_v8_engine_binding_api",
    "dep:rs_v8_binding_api_manager",
]
exit_check = []
network_debug_trace = ["rs_engine/network_debug_trace"]
detect_encoding = ["rs_shader_compiler_core/detect_encoding"]
reflection = ["dep:rs_reflection_core", "dep:rs_reflection_system"]
network = ["dep:rs_network", "rs_engine/network"]

[dependencies]
futures = "0.3.31"
tokio = { version = "1.47.1", features = ["full"] }
egui-snarl = { git = "https://github.com/zakarumych/egui-snarl.git", rev = "7963512", version = "0.8.0", features = [
    "serde",
] }
syn = { version = "2.0.106", features = ["full", "extra-traits"] }
log = "0.4.28"
env_logger = "0.11.8"
russimp = { version = "3.2.1", features = ["prebuilt", "static-link"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.143"
bincode = { version = "2.0.1", features = ["serde"] }
glam = { version = "0.30.5", features = ["mint"] }
uuid = { version = "1.18.1", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
    "serde",
] }
url = { version = "2.5.7", features = ["serde"] }
percent-encoding = "2.3.2"
winit = { version = "0.30.12" }
egui = { version = "0.32.2" }
egui_extras = { version = "0.32.2", features = ["all_loaders"] }
egui-winit = { version = "0.32.2" }
egui_plot = "0.33.0"
uniform-cubic-splines = { version = "=0.3.1" }
rfd = "0.15.4"
image = "0.25.8"
regex = "1.11.2"
notify = "8.2.0"
notify-debouncer-mini = { version = "0.7.0" }
walkdir = "2.5.0"
dunce = "1.0.5"
path-slash = "0.2.1"
md-5 = { version = "0.10.6" }
anyhow = { version = "1.0.99" }
lazy_static = "1.5.0"
image_dds = { version = "0.7.2" }
clap = { version = "4.5.47", features = ["derive"] }
naga = { version = "25.0.0", features = ["serialize", "deserialize"] }
wgpu = "25.0.0"
rand = { version = "0.9.2" }
mp4 = { version = "0.14.0" }
tracy-client = { version = "0.18.2", default-features = false }
rapier3d = { version = "0.29.0", features = ["simd-stable", "serde-serialize"] }
meshopt = "0.5.0"
transform-gizmo-egui = { path = "../.xmake/deps/egui-gizmo/crates/transform-gizmo-egui" }
rs_render = { path = "../rs_render" }
rs_render_types = { path = "../rs_render_types" }
rs_foundation = { path = "../rs_foundation" }
rs_artifact = { path = "../rs_artifact" }
rs_engine = { path = "../rs_engine" }
rs_hotreload_plugin = { path = "../rs_hotreload_plugin" }
rs_shader_compiler_core = { path = "../rs_shader_compiler_core" }
rs_core_minimal = { path = "../rs_core_minimal" }
rs_assimp = { path = "../rs_assimp" }
rs_proc_macros = { path = "../rs_proc_macros" }
rs_metis = { path = "../rs_metis" }
rs_media = { path = "../rs_media" }
rs_audio = { path = "../rs_audio" }
rs_mesh_optimization = { path = "../crates/rs_mesh_optimization" }
rs_v8_host = { path = "../rs_v8_host", optional = true }
rs_v8_engine_binding_api = { path = "../build/target/generated/rs_v8_engine_binding_api", optional = true }
rs_v8_binding_api_manager = { path = "../crates/rs_v8_binding_api_manager", optional = true }
rs_reflection_system = { path = "../crates/rs_reflection_system", optional = true }
rs_reflection_core = { path = "../crates/rs_reflection_core", optional = true }
rs_model_loader = { path = "../crates/rs_model_loader" }
rs_network = { path = "../crates/rs_network", optional = true }
rs_manifest = { path = "../crates/rs_manifest" }

[target.'cfg(target_os = "windows")'.dependencies]
rs_dotnet = { path = "../rs_dotnet", optional = true }
rs_dotnet_host = { path = "../rs_dotnet_host", optional = true }

[[bin]]
name = "editor"
path = "src/main.rs"

[build-dependencies]
winresource = "0.1"
svg_to_ico = "1.2"
glob = "0.3.3"
rs_core_minimal = { path = "../rs_core_minimal" }

[package.metadata.winresource]
OriginalFilename = "rs_editor.exe"
LegalCopyright = "GNU General Public License v2.0"
